// Code generated by mockery v2.41.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"

	resterrors "github.com/WalterPaes/go-rest-api-crud/pkg/rest_errors"
)

// JwtAuth is an autogenerated mock type for the JwtAuth type
type JwtAuth struct {
	mock.Mock
}

// GenerateToken provides a mock function with given fields: claims
func (_m *JwtAuth) GenerateToken(claims map[string]interface{}) (string, *resterrors.RestErr) {
	ret := _m.Called(claims)

	if len(ret) == 0 {
		panic("no return value specified for GenerateToken")
	}

	var r0 string
	var r1 *resterrors.RestErr
	if rf, ok := ret.Get(0).(func(map[string]interface{}) (string, *resterrors.RestErr)); ok {
		return rf(claims)
	}
	if rf, ok := ret.Get(0).(func(map[string]interface{}) string); ok {
		r0 = rf(claims)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(map[string]interface{}) *resterrors.RestErr); ok {
		r1 = rf(claims)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*resterrors.RestErr)
		}
	}

	return r0, r1
}

// VerifyTokenMiddleware provides a mock function with given fields: c
func (_m *JwtAuth) VerifyTokenMiddleware(c *gin.Context) {
	_m.Called(c)
}

// NewJwtAuth creates a new instance of JwtAuth. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJwtAuth(t interface {
	mock.TestingT
	Cleanup(func())
}) *JwtAuth {
	mock := &JwtAuth{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
